@model VolunteerEventsTableViewModel


@{
    ViewBag.Title = "VolunteerEventsTable";
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>

</head>
<body>

    <br />
    <h4>
        @Html.ActionLink("View Volunteer Events as a Calender", "Index")
    </h4>






    <h2>List of Volunteer Events</h2>

    @{
        var eventTypeItems = Model.EventTypes.Select(t => new SelectListItem
        {
            Text = t,
            Value = t
        }).ToList();



        List<SelectListItem> causelistItems = new List<SelectListItem>();
        causelistItems.Add(new SelectListItem
        {
            Text = "Animals",
            Value = "1"
        });
        causelistItems.Add(new SelectListItem
        {
            Text = "Arts & Culture",
            Value = "2"
        });
        causelistItems.Add(new SelectListItem
        {
            Text = "Education",
            Value = "3"
        });
        causelistItems.Add(new SelectListItem
        {
            Text = "Health",
            Value = "4"
        });
        causelistItems.Add(new SelectListItem
        {
            Text = "Homeless",
            Value = "5"
        });
        causelistItems.Add(new SelectListItem
        {
            Text = "Veterans",
            Value = "6"
        });



    }

    @{
        var eventNonProfitItems = Model.EventNonProfits.Select(p => new SelectListItem
        {
            Text = p,
            Value = p
        }).ToList();

        List<SelectListItem> nonprofitlistItems = new List<SelectListItem>();
        nonprofitlistItems.Add(new SelectListItem
        {
            Text = "ALS",
            Value = "11"
        });
        nonprofitlistItems.Add(new SelectListItem
        {
            Text = "Audobon Society",
            Value = "12"
        });
        nonprofitlistItems.Add(new SelectListItem
        {
            Text = "Boys & Girls Club",
            Value = "13"

        });
        nonprofitlistItems.Add(new SelectListItem
        {
            Text = "Conservation International",
            Value = "14"
        });
        nonprofitlistItems.Add(new SelectListItem
        {
            Text = "DonorsChoose.org",
            Value = "15"
        });
        nonprofitlistItems.Add(new SelectListItem
        {
            Text = "Global Giving",
            Value = "16"
        });
        nonprofitlistItems.Add(new SelectListItem
        {
            Text = "Human Rights Watch",
            Value = "17"
        });
        nonprofitlistItems.Add(new SelectListItem
        {
            Text = "Khan Academy",
            Value = "18"
        });

        nonprofitlistItems.Add(new SelectListItem
        {
            Text = "Rotary Club",
            Value = "19"
        });
        nonprofitlistItems.Add(new SelectListItem
        {
            Text = "YMCA",
            Value = "20"
        });
    }
    @*
        Limit Events By Cause: @Html.DropDownList("DDlDemo", new SelectList(eventTypeItems, "Value", "Text"))
        <br />
        Limit Events By NonProfit: @Html.DropDownList("DDlDemo", new SelectList(eventNonProfitItems, "Value", "Text"))
    *@

    @*Limit Events By Cause: @Html.DropDownList("DDlDemo", new SelectList(eventTypeItems, "Value", "Text"), new { onchange = "location.href = '" + @Url.Action("VolunteerEventsTable", "VolunteerEvents", new {eventType  }) + "'" })
    *@
    <br />
    Limit Events By Cause:
    <select id="EventTypeDropdown" onchange="onEventTypeChange(this)">
        @foreach (var type in Model.EventTypes)
        {
            <option value="@type" @(string.Equals(Model.CurrentEventTypeFilter, type) ? "selected" : "")>@type</option>

        }
    </select>
    @Html.ActionLink("Reset", "VolunteerEventsTable")
    <br />
    <br />


    Limit Events By Non-Profit:
    <select id="EventNonProfitDropdown" onchange="onEventNonProfitChange(this)">
        @foreach (var type in Model.EventNonProfits)
        {
            <option value="@type" @(string.Equals(Model.CurrentEventNonProfitFilter, type) ? "selected" : "")>@type</option>

        }
    </select>
    @Html.ActionLink("Reset", "VolunteerEventsTable")
    <br />
    <br />

    @*Limit Events By NonProfit: @Html.DropDownList("DDlDemo", new SelectList(eventNonProfitItems, "Value", "Text"))

    *@
    <table class="table">

        <!--<table id="table_id" class="display">   --this is the table tag used for datatables plugin-->
        <thead>
            <tr>


                <th>
                    @*@Html.DisplayNameFor(model => model.NonProfit)
                        Non-Profit*@
                    @Html.ActionLink("Non-Profit", "VolunteerEventsTable", new { tableOrderBy = 4 })
                </th>


                <th>
                    @* @Html.DisplayNameFor(model => model.EventName)
                        Name*@
                    @Html.ActionLink("Name", "VolunteerEventsTable", new { tableOrderBy = 1 })
                </th>

                <th>
                    @*@Html.DisplayNameFor(model => model.EventDate)
                        Date*@
                    @Html.ActionLink("Date", "VolunteerEventsTable", new { tableOrderBy = 2 })

                </th>



                <th>
                    @*@Html.DisplayNameFor(model => model.EventDetails)
                        Cause*@
                    @Html.ActionLink("Cause", "VolunteerEventsTable", new { tableOrderBy = 3 })
                </th>

                @*
                    <th>
                        @Html.DisplayNameFor(model => model.NonProfitID)
                    </th>
                *@





                <th>
                    @*@Html.DisplayNameFor(model => model.Company)
                        Company Participating*@
                    @Html.ActionLink("Company Participating", "VolunteerEventsTable", new { tableOrderBy = 5 })
                </th>





                <!--
                <th>
                    @*@Html.DisplayNameFor(model => model.EventTime)*@
                 </th>
                -->
                @*
                    <th>
                        @Html.DisplayNameFor(model => model.RestrictedByCompany)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EventLocked)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EventHidden)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EventCapacity)
                    </th>
                *@

                @*
                    <th>
                        @Html.DisplayNameFor(model => model.EventDescription)
                    </th>
                *@

                @*
                    <th>
                        @Html.DisplayNameFor(model => model.EventStartTime)
                        Start Time
                    </th>
                    <th>
                       @Html.DisplayNameFor(model => model.EventEndTime)
                        End Time
                    </th>
                *@

                @*
                       <th>
                        @Html.DisplayNameFor(model => model.EventInterest)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EventFiles)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EventTotalTime)
                    </th>
                *@

                <!--<th>
                </th>-->

            </tr>
        </thead>

        @foreach (var item in Model.Events)
        {
            <tbody>
                <tr>

                    <td>
                        @Html.DisplayFor(modelItem => item.NonProfit)
                    </td>



                    <td>
                        @Html.DisplayFor(modelItem => item.EventName)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.EventDate.Month)/@Html.DisplayFor(modelItem => item.EventDate.Day)/@Html.DisplayFor(modelItem => item.EventDate.Year)
                    </td>


                    <td>
                        @Html.DisplayFor(modelItem => item.EventDetails)
                    </td>
                    @*
                        <td>
                            @Html.DisplayFor(modelItem => item.NonProfitID)
                        </td>
                    *@




                    <td>
                        @Html.DisplayFor(modelItem => item.Company)
                    </td>


                    <!--

                    <td>
                        (at) Html.DisplayFor(modelItem => item.EventTime)
                    </td>
                        -->
                    @*
                        <td>
                            @Html.DisplayFor(modelItem => item.RestrictedByCompany)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventLocked)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventHidden)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventCapacity)
                        </td>

                    *@

                    @*
                        <td>
                            @Html.DisplayFor(modelItem => item.EventDescription)
                        </td>
                    *@
                    @*
                        <td>
                            @Html.DisplayFor(modelItem => item.EventStartTime.TimeOfDay)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventEndTime.TimeOfDay)
                        </td>
                    *@

                    @*
                        <td>
                            @Html.DisplayFor(modelItem => item.EventInterest)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventFiles)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventTotalTime)
                        </td>
                    *@
                    <td>
                        @*@Html.ActionLink("Edit", "Edit", new { id = item.VolunteerEventId }) |*@
                        @Html.ActionLink("View Event", "Details", new { id = item.VolunteerEventId })
                        @* @Html.ActionLink("Delete", "Delete", new { id = item.VolunteerEventId })*@
                    </td>
                </tr>
            </tbody>
        }

    </table>

</body>
</html>

@section Scripts
    {
   
    <script type="text/javascript">
        function onEventTypeChange(selectObject) {
           // debugger;
            var value = selectObject.value;

            var valueEncoded = encodeURIComponent(value);
            var url = "/VolunteerEvents/VolunteerEventsTable?eventTypeID=" + valueEncoded;

            //var url = "/VolunteerEvents/VolunteerEventsTable?eventTypeID=" + value;
            //var urlEncoded = encodeURIComponent(url);
            //window.location.href = urlEncoded;
            
            window.location.href = url;
        }

        function onEventNonProfitChange(selectObject) {
            //debugger;
            var value = selectObject.value;

            var valueEncoded = encodeURIComponent(value);
            var url = "/VolunteerEvents/VolunteerEventsTable?eventNonProfitID=" + valueEncoded;

           // var url = "/VolunteerEvents/VolunteerEventsTable?eventNonProfitID=" + value;
            
            window.location.href = url;
        }



    </script>
    }
