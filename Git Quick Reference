4D-Development Quick Git Reference

Purpose: To provide an ever present, point blank walk through to assist us in getting git procedures right while we're all still 
learning.

Please feel free to add to, or correct, this document as we move forward and learn more.



###If an update has been made to Development on the remote and you wish to integrate the changes locally:

1. Using your command line of choice (henceforth referred to as CLI) navigate to your local Development branch and perform a 
<git pull> operation. This will attempt to update your local Development to be on pace with the remote.

CMD(development): git pull origin development

    a. You may encounter a conflict while attempting to pull the updates. These conflicts are easiest to resolve in Visual Studio.
         Under the Project Viewer (Check name for accuracy, I'm going from memory) select the merge option near the top and navigate 
         through the process resolving any conflicts that may have arisen. 

2. Navigate back to the local branch you are working in and merge the updates in Development into it with <git merge Development>.
    a. Repeat conflict resolution as neccasary.

###If you have made changes to your local branch and wish to push it to the remote:

1. In the CLI type <git add .> this will update the local git file and allow us to commit the changes.

2. In the CLI type <git commit -m "Message"> this will get everything staged and ready to be pushed to the remote.

3. in the CLI type <git push> if your local is corretly pointed at the remote this should push your changes upstream
  3.a Confirm that the changes have been recognized by visiting the GitHub repo.
  
  
###If you have completed a feature and are ready to merge your changes to the Development branch:  

1. Complete the steps above to push the local copy of your feature to the remote.

2. Confirm that your local copy of the Development branch is current, updating if neccasary.

3. Navigate to your local Development branch <git checkout branch_name>

4. Merge your feature into the Developemnt branch <git merge feature_name>
  4.a Resolve any conflicts as neccesary.
  4.b Function test the changes locally, if successful proceed to upload the changes to the remote.
  
  
 //David's Changes
 Git Commands:
 
 Navigating the File System(cd): $ cd [options] [<directory>]
 List the contents of the content directory(folder): $ ls
 List all local branches: $ git branch
 List all remote branches: $ git branch -r
  
  
  
  
  
  
  
Helpful youtube video for reference: https://www.youtube.com/watch?v=MnUd31TvBoU&t=266s
